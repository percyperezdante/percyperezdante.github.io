<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home</title>
    <link>http://example.org/</link>
    <description>Recent content on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 09 Sep 2020 09:35:37 +0100</lastBuildDate>
    
	<atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Restful</title>
      <link>http://example.org/notes/restful/</link>
      <pubDate>Wed, 09 Sep 2020 09:35:37 +0100</pubDate>
      
      <guid>http://example.org/notes/restful/</guid>
      <description>Design tips  URI format:  URI = scheme &amp;quot;://&amp;quot; authority &amp;quot;/&amp;quot; path [ &amp;quot;?&amp;quot; query] [&amp;quot;#&amp;quot; fragment&amp;quot;] URI = http://myserver.com/mypath?query=1#document   General rules for URI formating:
 A forward slash / is used to indicate a hierarchical relationship between resources A trailing forward slash / should not be included in URIs Hyphens - should be used to improve readability Underscores _ should not be used in URIs Lowercase lette    URI path design</description>
    </item>
    
    <item>
      <title>Mypostmortem</title>
      <link>http://example.org/sre/mypostmortem/</link>
      <pubDate>Sun, 30 Aug 2020 11:19:50 +0100</pubDate>
      
      <guid>http://example.org/sre/mypostmortem/</guid>
      <description>Random notes  Expose your code for one day to everyone. Ask people to execute disaster revocery of everything once or twice a year. blameless I do not think is a way to avoid future mistakes, I think it is a way to save time and effort, thefore reduce costs. We should test our selves at least once a year. to see how if we are ready or notfor disasters Postmorten of the month?</description>
    </item>
    
    <item>
      <title>Jfrog</title>
      <link>http://example.org/notes/jfrog/</link>
      <pubDate>Thu, 27 Aug 2020 14:09:26 +0100</pubDate>
      
      <guid>http://example.org/notes/jfrog/</guid>
      <description>1. How to install a local Jfrog (open source) The following shows how to install a local Jfrog (OSS) in a Linux-base host.
 Open https://jfrog.com/open-source/#artifactory Select the OS you are working with: Linux, Windows or Mac and click on &amp;ldquo;Click here to Download&amp;rdquo;  In our case we could directly download the tar file for Linux:
$ mkdir myJfrog $ cd myJfrog $ wget https://api.bintray.com/content/jfrog/artifactory/org/artifactory/oss/jfrog-artifactory-oss/$latest/jfrog-artifactory-oss-$latest-linux.tar.gz?bt_package=jfrog-artifactory-oss $ ls -tlr total 811768 -rw-rw-r-- 1 percy percy 831242240 Aug 26 17:28 jfrog-artifactory-oss-7.</description>
    </item>
    
    <item>
      <title>Review</title>
      <link>http://example.org/sre/review/</link>
      <pubDate>Mon, 24 Aug 2020 12:04:13 +0100</pubDate>
      
      <guid>http://example.org/sre/review/</guid>
      <description>This section contains reviews or summaries from exisitng literature.
1. SQL is no excuse to avoid devops @article{limoncelli2018sql, title={SQL is no excuse to avoid DevOps}, author={Limoncelli, Thomas A}, journal={Communications of the ACM}, volume={62}, number={1}, pages={46--49}, year={2018}, publisher={ACM New York, NY, USA} } Automation and a little discipline allow better testing, shorter release cycles, and reduced business risk.
Previous articles:
 “The Small Batches Principle,”Communications, July 2016), when something is risky there is a natural inclination to seek to do it less.</description>
    </item>
    
    <item>
      <title>Myapproach</title>
      <link>http://example.org/sre/myapproach/</link>
      <pubDate>Sun, 21 Jun 2020 08:40:40 +0100</pubDate>
      
      <guid>http://example.org/sre/myapproach/</guid>
      <description>What is SRE  SRE measures how reliable my serivice is from my customer&amp;rsquo;s perspective, not from my perspective. It seems most of the talks use current or historic data, logs, Why we do not estimate future data then ?  The reason is that usually you take generated logs, so it is hard to have a real-time observations. How to have real-time observations? how to estimate the future?    SLO  Defines a threshold, max or min value, for an SLI.</description>
    </item>
    
    <item>
      <title>SRECON 2019</title>
      <link>http://example.org/sre/online/srecon2019/</link>
      <pubDate>Sat, 20 Jun 2020 16:52:44 +0100</pubDate>
      
      <guid>http://example.org/sre/online/srecon2019/</guid>
      <description>1. The SRE I Aspire to be by Yaniv Aknin at SRECON 2019  Yaniv A. is GCP quantitative reliability lead. SRE skill is the ability to measure or translate to numbers ( quantify ) SRE includes: &amp;ldquo;measurably optimse reliability vs cost&amp;rdquo; It is important to trade Operations and Reliability How can we build a more reliable logical disk? then we do not need to increase operations due to failure. One solution as use RAIDs, but cost more and more complexity!</description>
    </item>
    
    <item>
      <title>Crypto</title>
      <link>http://example.org/notes/crypto/</link>
      <pubDate>Tue, 16 Jun 2020 22:11:31 +0100</pubDate>
      
      <guid>http://example.org/notes/crypto/</guid>
      <description>General  DES; The Data Encryption Standard uses a key of 56bits and a block size of 64 buts. It is not recommended, and insted you can consider other approaches such as AES, Salsa20.:w   </description>
    </item>
    
    <item>
      <title>Networking</title>
      <link>http://example.org/devops/gcp/networking/</link>
      <pubDate>Sun, 14 Jun 2020 09:29:44 +0100</pubDate>
      
      <guid>http://example.org/devops/gcp/networking/</guid>
      <description>Insert MAP
VPC Virtual Private Cloud INSERT VPC
 Projects   Key organisers in VPC, and it is linked to billing Projects contains entire networks Default quota is 5 networks for one project.   Networks   No IP address range Networks are global Contain subnwtowrks Type: default, auto or custom. Custom networks can not be converted to auto mode networks  ipaddress</description>
    </item>
    
    <item>
      <title>Shell</title>
      <link>http://example.org/notes/shell/</link>
      <pubDate>Thu, 21 May 2020 11:52:12 +0100</pubDate>
      
      <guid>http://example.org/notes/shell/</guid>
      <description>1. Sending message to pts terminal # List of opened terminals. percy@prec:~$ ls -tlr /dev/pts/ total 0 c--------- 1 root root 5, 2 May 21 06:18 ptmx crw--w---- 1 percy tty 136, 2 May 21 11:36 2 crw--w---- 1 percy tty 136, 0 May 21 11:52 0 crw--w---- 1 percy tty 136, 3 May 21 11:53 3 crw--w---- 1 percy tty 136, 4 May 21 11:53 4 crw--w---- 1 percy tty 136, 6 May 21 11:53 6 crw--w---- 1 percy tty 136, 5 May 21 11:53 5 percy@prec:~$ echo &amp;#34;How are you ?</description>
    </item>
    
    <item>
      <title>Kubernetes</title>
      <link>http://example.org/notes/kubernetes/</link>
      <pubDate>Wed, 13 May 2020 15:12:41 +0100</pubDate>
      
      <guid>http://example.org/notes/kubernetes/</guid>
      <description>Reference The following notes were extracted, adjusted or extended from the following references.
 Kubernetes book by Nigel Poulton  General   The cluster is made up of one or more masters, and a bunch of nodes.
  Package and deploy a Kubernetes application is done via a Deployment. With Deployments, we start out with our application code and we containerize it. Then we define it as a Deployment via a YAML or JSON manifest file.</description>
    </item>
    
    <item>
      <title>Go</title>
      <link>http://example.org/notes/go/</link>
      <pubDate>Mon, 11 May 2020 11:04:57 +0100</pubDate>
      
      <guid>http://example.org/notes/go/</guid>
      <description>References The following notes were extracted, adjusted or extended from the following references.
 Go mastering by Mihalis Tsoukalos  General 1. Go inserts only a semicolon at the end of a &amp;ldquo;{&amp;quot;
func main() { // &amp;lt;-- this will trigger error .... } func main(){ // &amp;lt;-- this will NOT trigger error .... } 2. Install and clean packages
$ go get -v github.com/mastsoud/go/package_name ..... $ go clean -i -v -x package_name $ rm -rf ~/go/src/github.</description>
    </item>
    
    <item>
      <title>Fundamentals</title>
      <link>http://example.org/devops/gcp/fundamentals/</link>
      <pubDate>Sun, 12 Apr 2020 11:06:46 +0100</pubDate>
      
      <guid>http://example.org/devops/gcp/fundamentals/</guid>
      <description>Introduction GCP offers four main services:
- Compute - Storage - Big data - Machine learning  The fundamentals course covers mainly the first two plus networking.
Cloud computing is an on-demand infrastrucuture available under the following characteristics:
- Compute resouces on-demand self-service: no human intervention - Access from anywhere in the internet - Resource pooling: GCP provides share-base resources - Rapid elasiticity: Get more resources quickly as needed - Measured service: pay for what you consume or use  There are serveral GCP computing services, such as:</description>
    </item>
    
    <item>
      <title>SRE MMR Week4</title>
      <link>http://example.org/sre/online/sre-mmr-week4/</link>
      <pubDate>Thu, 02 Apr 2020 23:02:43 +0100</pubDate>
      
      <guid>http://example.org/sre/online/sre-mmr-week4/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SRE MMR Week3</title>
      <link>http://example.org/sre/online/sre-mmr-week3/</link>
      <pubDate>Thu, 02 Apr 2020 23:02:40 +0100</pubDate>
      
      <guid>http://example.org/sre/online/sre-mmr-week3/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SRE MMR Week2</title>
      <link>http://example.org/sre/online/sre-mmr-week2/</link>
      <pubDate>Thu, 02 Apr 2020 23:02:38 +0100</pubDate>
      
      <guid>http://example.org/sre/online/sre-mmr-week2/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SRE MMR Week1</title>
      <link>http://example.org/sre/online/sre-mmr-week1/</link>
      <pubDate>Thu, 02 Apr 2020 22:54:36 +0100</pubDate>
      
      <guid>http://example.org/sre/online/sre-mmr-week1/</guid>
      <description>Introduction to SRE How does SRE differ from Devops? Devops and SRE point to similar goals, which is break down organizational barriers to deliver software features faster.
Traditionally, developers are responsable for features and operations for stability. Developers want to move faster to release new features and operations want to move slow to keep all service stable. As a commong results, tension between teams appears during realease times. Devops and SRE practices aim to break downs this tensions.</description>
    </item>
    
    <item>
      <title>References</title>
      <link>http://example.org/sre/references/</link>
      <pubDate>Sat, 21 Mar 2020 12:00:04 +0000</pubDate>
      
      <guid>http://example.org/sre/references/</guid>
      <description>This page present a list of references related to SRE.
Books   Beyer, B., Jones, C., Petoff, J. and Murphy, N.R., 2016. Site Reliability Engineering: How Google Runs Production Systems. &amp;quot; O&amp;rsquo;Reilly Media, Inc.&amp;quot;.
 A online available version can be read from here.    Beyer, B., Murphy, N.R., Rensin, D.K., Kawahara, K. and Thorne, S., 2018. The site reliability workbook: Practical ways to implement SRE. &amp;quot; O&amp;rsquo;Reilly Media, Inc.</description>
    </item>
    
    <item>
      <title>Installation</title>
      <link>http://example.org/tools/installation/</link>
      <pubDate>Thu, 19 Mar 2020 16:25:40 +0000</pubDate>
      
      <guid>http://example.org/tools/installation/</guid>
      <description>This page presents suggestions on how to install tools of interest. It is ordered alphabetically.
A G   GO
 $ git clone https://github.com/golang/go.git $ cd go/src $ ./all.bash # &amp;lt;-- This should generate ../bin/go file. $ cd .. $ export GOPATH=`pwd` # &amp;lt;-- Add this to your profile such as ~/.bashrc $ cd bin $ export GOBIN=`pwd` # &amp;lt;-- Add this to your profile such as ~/.bashrc $ go version    P   Packer</description>
    </item>
    
    <item>
      <title>NManet</title>
      <link>http://example.org/research/nmanet/</link>
      <pubDate>Wed, 18 Mar 2020 22:51:27 +0000</pubDate>
      
      <guid>http://example.org/research/nmanet/</guid>
      <description>Very brief overview NDN for MANETs approach, represented as nMANET, aims to offer an alternative perspective on how the characteristics of NDN can be utilised to solve the limitations of MANETs. nMANET has its roots in Named Data Network NDN, an instance of Content Centric Networks CCN. In contrast with traditional TCP/IP networks, CCN enables content addressing instead of host based communication, and secures the content instead of securing the communication channel between hosts.</description>
    </item>
    
    <item>
      <title>Building Images</title>
      <link>http://example.org/devops/images/</link>
      <pubDate>Tue, 17 Mar 2020 17:49:45 +0000</pubDate>
      
      <guid>http://example.org/devops/images/</guid>
      <description>This page presents a set of templates to build images through tools such as packer. The content of these templates is the result of a combination of available resources online.
Packer This sections present cases about how to build linux-base images. More details in the Ajayu github repository.
 Oracle Linux 6.10 using a DVD .iso file. Jenkins and Capistrano V2 base on OL6. It is also available in Vagrant Cloud  </description>
    </item>
    
  </channel>
</rss>